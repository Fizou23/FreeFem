//definition of the exact solution and source term
func uex = sin(pi*x)*sin(pi*y);
func fex = 2*(pi^2)*sin(pi*x)*sin(pi*y);


//domain defining borders
border S1(t=0,1) {x=t;y=0;}
border S2(t=0,1) {x=1;y=t;}
border S3(t=0,1) {x=1+(0.875-1)*t;y=1;}
border S4(t=0,1) {x=0.875+(0.125-0.875)*t;y=1;}
border S5(t=0,1) {x=0.125-0.125*t;y=1;}
border S6(t=0,1) {x=0;y=1-t;}
border S7(t=0,1) {x=0.875;y=0.95+(1-0.95)*t;}
border S8(t=0,1) {x=0.125+(0.875-0.125)*t;y=0.95;}
border S9(t=0,1) {x=0.125;y=1+(0.95-1)*t;}
border S10(t=0,1) {x=0.125;y=0.95+(0.25-0.95)*t;}
border S11(t=0,1) {x=0.125+(0.875-0.125)*t;y=0.25;}
border S12(t=0,1) {x=0.875;y=0.25+(0.95-0.25)*t;}

//mesh size
int NN=50,
    NNi=50;

//Building and adapting the mesh
mesh Th = buildmesh(S1(NN)+S2(NN)+S3(NN)+S4(NNi)+S5(NN)+S6(NN)+S7(NNi)+S8(NNi)+S9(NNi)+S10(NNi)+S11(NNi)+S12(NNi));
//plot(Th,wait=1);
real h=0.01; //defining the new mesh size
Th = adaptmesh(Th, h, IsMetric=1); 
plot(Th,wait=1);
//defining the regions
int regi = Th(0.5,0.5).region; //B
int regx = Th(0.01,0.01).region; //varpi
int regh = Th(0.5,0.99).region; //Omega\(B U varpi)


//define and solve the problem
solve Pb([u,xi],[v,eta])= 
    int2d(Th,regx)( u*v ) + int2d(Th)( grad(xi)'*grad(v)  + grad(u)'*grad(eta)- grad(xi)'*grad(eta)) 
    + intalledges(Th)(0.5*gamma*(nTonEdge-1)*h*jump(dN(u))*jump(dN(v)) )
    - intalledges(Th)(0.5*gamma*(nTonEdge-1)*h*jump(dN(xi))*jump(dN(eta))) - int2d(Th,regx)(uexh*v) - int2d(Th)(fexh*eta) + on(1,xi=0);


//plot the solution
plot(u,wait=1,value=1,cmm="u");